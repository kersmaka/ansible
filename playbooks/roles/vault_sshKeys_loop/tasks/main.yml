---
- name: Get Vault secret data
  uri:
    url: "https://10.0.0.33:8200/v1/ssh_keys/data/lab04"
    method: GET
    headers:
      X-Vault-Token: "hvs.4icVDQC4UHjq3iTE0A8d52kO"
    validate_certs: false  # Use with caution in production!
    return_content: yes
  register: vault_result

- name: Set facts for each key/value pair with prefix
  set_fact:
    "vault_{{ item.key | regex_replace('-', '_') }}": "{{ item.value }}"
  loop: "{{ vault_result.json.data.data | dict2items }}"
  when: vault_result is defined and vault_result.json.data.data is defined

- debug:
    msg: "rhel95-lab04: {{ vault_rhel95_lab04 | default('Not Found') }}"
- debug:
    msg: "rhel95-lab06: {{ vault_rhel95_lab06 | default('Not Found') }}"
- debug:
    msg: "rhel95-lab07: {{ vault_rhel95_lab07 | default('Not Found') }}"

# Example of using the dynamically created variables in a subsequent task
- name: Use the variables (example - replace with your actual task)
  debug:
    msg: "SSH Key for rhel95-lab04: {{ vault_rhel95_lab04 }}"
  when: vault_rhel95_lab04 is defined

- name: Another example using the variables
  debug:
    msg: "Value for rhel95-lab06: {{ vault_rhel95_lab06 }}"
  when: vault_rhel95_lab06 is defined

- name: Yet another example using the variables
  debug:
    msg: "Value for rhel95-lab07: {{ vault_rhel95_lab07 }}"
  when: vault_rhel95_lab07 is defined

# Example of using the variables in a template (if needed)
- name: Create a file with the secrets (example)
  template:
    src: secrets.j2  # Create this Jinja2 template file
    dest: /tmp/secrets.txt
  vars:
    rhel95_lab04_secret: "{{ vault_rhel95_lab04 | default('Not Found') }}"
    rhel95_lab06_secret: "{{ vault_rhel95_lab06 | default('Not Found') }}"
    rhel95_lab07_secret: "{{ vault_rhel95_lab07 | default('Not Found') }}"
  when: vault_rhel95_lab04 is defined and vault_rhel95_lab06 is defined and vault_rhel95_lab07 is defined