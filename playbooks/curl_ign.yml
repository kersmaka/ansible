---
- name: Check ign.com with the URI module
  hosts: test_nodes
  become: yes # Needed for firewalld tasks earlier

  tasks:
    - name: Gathering Facts
      ansible.builtin.setup:

    - name: Debug Ansible Python Interpreter
      ansible.builtin.command: /usr/bin/python3 -c "import sys; print(sys.executable)"
      register: python_interpreter_path
      changed_when: false

    - name: Display Python interpreter path
      ansible.builtin.debug:
        msg: "Ansible is attempting to use Python: {{ python_interpreter_path.stdout }}"

    - name: Add rich rules to firewalld (using command module)
      ansible.builtin.command: >
        firewall-cmd --zone=public --add-rich-rule='{{ item }}' --permanent
      loop:
        # Rules to drop INBOUND connections on ports 80 and 443
        - 'rule family="ipv4" destination address="0.0.0.0/0" port port="80" protocol="tcp" drop'
        - 'rule family="ipv4" destination address="0.0.0.0/0" port port="443" protocol="tcp" drop'
        - 'rule family="ipv6" destination address="::/0" port port="80" protocol="tcp" drop'
        - 'rule family="ipv6" destination address="::/0" port port="443" protocol="tcp" drop'

        # Rules to REJECT OUTBOUND connections on port 22
        - 'rule family="ipv4" source address="0.0.0.0/0" destination address="0.0.0.0/0" port port="22" protocol="tcp" reject'
        - 'rule family="ipv6" source address="::/0" destination address="::/0" port port="22" protocol="tcp" reject'
      changed_when: true

    - name: Ensure SSH service is enabled in firewalld public zone (for incoming SSH)
      ansible.builtin.command: firewall-cmd --zone=public --add-service=ssh --permanent
      changed_when: true
      ignore_errors: true # Ignore if service is already enabled

    - name: Reload firewalld to apply immediate changes
      ansible.builtin.command: firewall-cmd --reload
      changed_when: true

    - name: Curl https://ign.com to verify connectivity (expecting refusal)
      ansible.builtin.uri:
        url: https://ign.com
        method: GET
        validate_certs: yes
        timeout: 5
      register: curl_https_result
      failed_when: >
        curl_https_result.status != -1 or 'Connection refused' not in curl_https_result.msg

    - name: Display HTTPS curl result
      ansible.builtin.debug:
        var: curl_https_result

    - name: Curl http://ign.com to verify connectivity (expecting refusal)
      ansible.builtin.uri:
        url: http://ign.com
        method: GET
        validate_certs: no
        timeout: 5
      register: curl_http_result
      failed_when: >
        curl_http_result.status != -1 or 'Connection refused' not in curl_http_result.msg

    - name: Display HTTP curl result
      ansible.builtin.debug:
        var: curl_http_result

    - name: Clone kersmaka/ansible repository (expecting refusal now for SSH clone)
      ansible.builtin.git:
        repo: git@github.com:kersmaka/ansible.git
        dest: /tmp/ansible_repo
        accept_hostkey: yes
        # Removed 'timeout: 5' as it's not a supported parameter
      register: git_clone_result
      failed_when: >
        not git_clone_result.failed or
        (git_clone_result.failed and
         'Permission denied' not in git_clone_result.msg and
         'Connection refused' not in git_clone_result.msg and
         'Network unreachable' not in git_clone_result.msg and
         'No route to host' not in git_clone_result.msg)

    - name: Display git clone result
      ansible.builtin.debug:
        var: git_clone_result