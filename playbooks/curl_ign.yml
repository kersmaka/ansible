---
- name: Check ign.com with the URI module
  hosts: test_nodes
  become: yes # Needed for firewalld tasks earlier

  tasks:
    - name: Gathering Facts
      ansible.builtin.setup:

    - name: Debug Ansible Python Interpreter
      ansible.builtin.command: /usr/bin/python3 -c "import sys; print(sys.executable)"
      register: python_interpreter_path
      changed_when: false

    - name: Display Python interpreter path
      ansible.builtin.debug:
        msg: "Ansible is attempting to use Python: {{ python_interpreter_path.stdout }}"

    - name: Add rich rules to firewalld (using command module)
      ansible.builtin.command: >
        firewall-cmd --zone=public --add-rich-rule='{{ item }}' --permanent
      loop:
        - 'rule family="ipv4" destination address="0.0.0.0/0" port port="80" protocol="tcp" drop'
        - 'rule family="ipv4" destination address="0.0.0.0/0" port port="443" protocol="tcp" drop'
        - 'rule family="ipv6" destination address="::/0" port port="80" protocol="tcp" drop'
        - 'rule family="ipv6" destination address="::/0" port port="443" protocol="tcp" drop'
      changed_when: true

    - name: Reload firewalld to apply immediate changes
      ansible.builtin.command: firewall-cmd --reload
      changed_when: true

    - name: Curl https://ign.com to verify connectivity
      ansible.builtin.uri:
        url: https://ign.com
        method: GET
        status_code: 200 # Expecting a 200 OK response
        validate_certs: yes # Recommended for production, ensures SSL cert is valid
      register: curl_result # Register the output for debugging
      # The 'failed_when' condition prevents the task from failing if the status code isn't 200,
      # but still allows you to check for connectivity issues.
      # However, for a simple curl, status_code: 200 is usually what you want.
      # You could add 'failed_when: curl_result.status != 200' if not using status_code directly.

    - name: Display curl result
      ansible.builtin.debug:
        var: curl_result