---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: Read ciphertext from file (RECOMMENDED)
      slurp:
        src: /path/to/your/ciphertext_file.txt  # Replace with the actual path
      register: ciphertext_file
      when: ciphertext_path is defined

    - name: Set ciphertext variable (fallback if no file)
      set_fact:
        ciphertext: "{{ ciphertext_file.content | trim if ciphertext_path is defined else ciphertext_value | trim }}"
      vars:
        ciphertext_value: "vault:v1:mp7LII5/9/EtYigttgz1lENVUXzjhn7gGfVg3cCcBp1As9o=" # Your ciphertext here (quoted!)
      # No when clause needed, always sets the ciphertext

    - name: Debug Ciphertext (Check for whitespace!)
      debug:
        msg: "Ciphertext: |{{ ciphertext }}|"  # The pipes | | will show leading/trailing whitespace

    - name: Decrypt using Vault API
      uri:
        validate_certs: false
        url: "https://10.0.0.33:8200/v1/transit/decrypt/my-keys"
        method: POST
        headers:
          X-Vault-Token: "hvs.4icVDQC4UHjq3iTE0A8d52kO"
          Content-Type: application/json
        body_format: json
        body: '{"ciphertext": "{{ ciphertext }}"}'
        status_code: [200]
      register: decryption_result

    - name: Base64 decode the plaintext
      set_fact:
        burger: "{{ decryption_result.json.data.plaintext | b64decode }}"

    - name: Display the burger
      debug:
        msg: "Your burger: {{ burger }}"

    - name: (Optional) Write the burger to a file
      copy:
        content: "{{ burger }}"
        dest: /path/to/your/burger.txt
        mode: 0600